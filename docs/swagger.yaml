basePath: /api/v1
definitions:
  handler.Response:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  handler.errorResponse:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  models.Account:
    properties:
      created-at:
        type: string
      id:
        type: integer
      user_id:
        type: integer
    type: object
  models.GetAllUserPostsResponse:
    properties:
      user_posts:
        items:
          $ref: '#/definitions/models.GetPostByIdResponse'
        type: array
    type: object
  models.GetAllUsersPostsRequest:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      sorting:
        type: string
    type: object
  models.GetAllUsersPostsResponse:
    properties:
      posts:
        items:
          $ref: '#/definitions/models.GetPostByIdResponse'
        type: array
    type: object
  models.GetPostByIdResponse:
    properties:
      categories:
        items:
          type: string
        type: array
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      images:
        items:
          type: string
        type: array
      profile_image:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
      username:
        type: string
    required:
    - user_id
    - username
    type: object
  models.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  models.SignInRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  models.SignOutRequest:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.SignUpRequest:
    properties:
      login:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - login
    - password
    - username
    type: object
  models.SignUpResponse:
    properties:
      account_id:
        type: integer
      user_id:
        type: integer
    type: object
  models.UpdatePostRequest:
    properties:
      categories:
        items:
          type: integer
        type: array
      description:
        type: string
      id:
        type: integer
      images:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      json:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      login:
        type: string
      password:
        type: string
      profile_image:
        type: string
      role_id:
        type: integer
      username:
        type: string
    required:
    - login
    - password
    - username
    type: object
  models.UserTokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: mirchenko1702@gmail.com
    name: API Support
  description: Swagger API for Designers App
  termsOfService: http://swagger.io/terms/
  title: Designers App Swagger API
  version: "1.0"
paths:
  /account/:id:
    get:
      consumes:
      - application/json
      description: get account info by user id
      operationId: get-account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: Get account info
      tags:
      - account
    post:
      consumes:
      - application/json
      description: create default account with user id from body
      operationId: create-account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: Create account by user id
      tags:
      - account
  /auth/logout:
    post:
      consumes:
      - application/json
      description: logout user
      operationId: logout
      parameters:
      - description: user tokens
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignOutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success login
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: LogOut
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh access token
      operationId: refresh
      parameters:
      - description: user refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success refresh
          schema:
            $ref: '#/definitions/models.UserTokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: Refresh token
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success login
          schema:
            $ref: '#/definitions/models.UserTokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-user
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
  /posts/:
    post:
      consumes:
      - multipart/form-data
      description: create post with account id that written in context
      operationId: delete-post
      parameters:
      - in: formData
        name: postInfo
        required: true
        type: string
      - description: post files
        in: formData
        name: input
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: Create post
      tags:
      - posts
  /posts/:id:
    delete:
      consumes:
      - application/json
      description: delete post by post id
      operationId: create-post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: Delete post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: GetFromCache post by post id
      operationId: get-post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetPostByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetFromCache post
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update post by post id
      operationId: update-post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: post update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: Update post
      tags:
      - posts
  /posts/users/:
    get:
      description: GetFromCache all users posts
      operationId: get-users-posts
      parameters:
      - description: params for partition
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.GetAllUsersPostsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUsersPostsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetFromCache all users posts
      tags:
      - posts
  /posts/users/:id:
    get:
      consumes:
      - application/json
      description: GetFromCache all user post by user id
      operationId: get-user-posts
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetAllUserPostsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: GetFromCache user posts
      tags:
      - posts
  /users/:
    get:
      consumes:
      - application/json
      description: get all users
      operationId: get-all-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: GetFromCache all users
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user fields
      operationId: update-user
      parameters:
      - description: user fields to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: Update User fields
      tags:
      - users
  /users/:id:
    delete:
      consumes:
      - application/json
      description: delete user by id
      operationId: delete-user-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: Delete User By Id
      tags:
      - users
    get:
      consumes:
      - application/json
      description: get user by id
      operationId: get-user-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - Authorization: []
      summary: GetFromCache User By Id
      tags:
      - users
securityDefinitions:
  Authorization:
    in: header
    name: Bearer token
    type: apiKey
swagger: "2.0"
